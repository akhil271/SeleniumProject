{"uid":"e78cfea02feeeb03","name":"test_scroll_with_arrow","fullName":"tests.test_scroll#test_scroll_with_arrow","historyId":"f809d49835b6a9b92aaacb4a7be6ef25","time":{"start":1761125912220,"stop":1761125985552,"duration":73332},"description":"\nScroll down using repeated ARROW_DOWN presses, verify bottom content,\nthen scroll up using ARROW_UP and verify top banner is visible again.\n","descriptionHtml":"<p>Scroll down using repeated ARROW_DOWN presses, verify bottom content,<br />\nthen scroll up using ARROW_UP and verify top banner is visible again.</p>\n","status":"failed","statusMessage":"AssertionError: Top banner not visible after scrolling up.\nassert False\n +  where False = wait_for_top_banner()\n +    where wait_for_top_banner = <pages.scroll_page.ScrollPage object at 0x0000027A3020C050>.wait_for_top_banner","statusTrace":"def test_scroll_with_arrow():\n        \"\"\"\n        Scroll down using repeated ARROW_DOWN presses, verify bottom content,\n        then scroll up using ARROW_UP and verify top banner is visible again.\n        \"\"\"\n        driver = get_driver()\n        try:\n            # allow page to stabilize (alert handled by get_driver if configured)\n            time.sleep(2)\n    \n            page = ScrollPage(driver)\n    \n            # Ensure we're at top initially\n            assert page.wait_for_top_banner(), \"Top banner not visible at start.\"\n    \n            # Scroll down with arrow keys\n            page.scroll_down_arrow(times=30, sleep=0.07)  # adjust times for your viewport\n            time.sleep(1)  # let layout settle\n    \n            # Verify bottom content / subscription or footer visible\n            assert page.wait_for_subscription_section() or page.wait_for_footer(), \"Bottom (subscription/footer) not visible after arrow scroll.\"\n    \n            # Scroll back up with arrow keys\n            page.scroll_up_arrow(times=30, sleep=0.07)\n            time.sleep(1)\n    \n            # Verify top banner visible again\n>           assert page.wait_for_top_banner(), \"Top banner not visible after scrolling up.\"\nE           AssertionError: Top banner not visible after scrolling up.\nE           assert False\nE            +  where False = wait_for_top_banner()\nE            +    where wait_for_top_banner = <pages.scroll_page.ScrollPage object at 0x0000027A3020C050>.wait_for_top_banner\n\ntests\\test_scroll.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"\nScroll down using repeated ARROW_DOWN presses, verify bottom content,\nthen scroll up using ARROW_UP and verify top banner is visible again.\n","status":"failed","statusMessage":"AssertionError: Top banner not visible after scrolling up.\nassert False\n +  where False = wait_for_top_banner()\n +    where wait_for_top_banner = <pages.scroll_page.ScrollPage object at 0x0000027A3020C050>.wait_for_top_banner","statusTrace":"def test_scroll_with_arrow():\n        \"\"\"\n        Scroll down using repeated ARROW_DOWN presses, verify bottom content,\n        then scroll up using ARROW_UP and verify top banner is visible again.\n        \"\"\"\n        driver = get_driver()\n        try:\n            # allow page to stabilize (alert handled by get_driver if configured)\n            time.sleep(2)\n    \n            page = ScrollPage(driver)\n    \n            # Ensure we're at top initially\n            assert page.wait_for_top_banner(), \"Top banner not visible at start.\"\n    \n            # Scroll down with arrow keys\n            page.scroll_down_arrow(times=30, sleep=0.07)  # adjust times for your viewport\n            time.sleep(1)  # let layout settle\n    \n            # Verify bottom content / subscription or footer visible\n            assert page.wait_for_subscription_section() or page.wait_for_footer(), \"Bottom (subscription/footer) not visible after arrow scroll.\"\n    \n            # Scroll back up with arrow keys\n            page.scroll_up_arrow(times=30, sleep=0.07)\n            time.sleep(1)\n    \n            # Verify top banner visible again\n>           assert page.wait_for_top_banner(), \"Top banner not visible after scrolling up.\"\nE           AssertionError: Top banner not visible after scrolling up.\nE           assert False\nE            +  where False = wait_for_top_banner()\nE            +    where wait_for_top_banner = <pages.scroll_page.ScrollPage object at 0x0000027A3020C050>.wait_for_top_banner\n\ntests\\test_scroll.py:32: AssertionError","steps":[],"attachments":[{"uid":"2e544092fb8c912","name":"stdout","source":"2e544092fb8c912.txt","type":"text/plain","size":17}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_scroll"},{"name":"host","value":"ASCENDI-6MBKDO5"},{"name":"thread","value":"5836-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_scroll"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e78cfea02feeeb03.json","parameterValues":[]}